// @ts-check

import * as esbuild from "esbuild";
import { open, cp } from "node:fs/promises";
import process from "node:process";

async function touch(path) {
    let file;
    try {
        file = await open(path, "w");
    } finally {
        await file?.close();
    }
}

const banner = `
// AUTOGENERATED by esbuild
// For source code, go to: https://github.com/ssmendon/obsidian-filename-plugin
`;
const outdir = "dist";
const prod = process.argv[2] === "production";

const copied = cp("./obsidian/", "./dist/", { recursive: true });

const ctx = await esbuild.context({
    banner: { js: banner },
    bundle: true,
    define: { DEBUG: prod ? "false" : "true" },
    entryPoints: ["src/main.ts"],
    format: "cjs",
    logLevel: "info",
    minify: prod,
    outdir: outdir,
    packages: "external", // don't bundle anything
    resolveExtensions: [".ts", ".js"],
    sourcemap: prod ? false : "inline",
    target: "node20",
    treeShaking: prod,
    write: true,
});

if (prod) {
    await ctx.rebuild();
    process.exit(0);
} else {
    // add a `.hotreload` file for the obsidian pjeby/hot-reload plugin
    touch("./dist/.hotreload");
    await ctx.watch();
}
